import { z } from 'zod';
export declare const PaymentTransactionSchema: z.ZodObject<{
    id: z.ZodNumber;
    gateway: z.ZodString;
    transactionDate: z.ZodDate;
    accountNumber: z.ZodNullable<z.ZodString>;
    subAccount: z.ZodNullable<z.ZodString>;
    amountIn: z.ZodNumber;
    amountOut: z.ZodNumber;
    accumulated: z.ZodNumber;
    code: z.ZodNullable<z.ZodString>;
    transactionContent: z.ZodNullable<z.ZodString>;
    referenceNumber: z.ZodNullable<z.ZodString>;
    body: z.ZodNullable<z.ZodString>;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    code: string | null;
    id: number;
    createdAt: Date;
    body: string | null;
    gateway: string;
    transactionDate: Date;
    accountNumber: string | null;
    subAccount: string | null;
    amountIn: number;
    amountOut: number;
    accumulated: number;
    transactionContent: string | null;
    referenceNumber: string | null;
}, {
    code: string | null;
    id: number;
    createdAt: Date;
    body: string | null;
    gateway: string;
    transactionDate: Date;
    accountNumber: string | null;
    subAccount: string | null;
    amountIn: number;
    amountOut: number;
    accumulated: number;
    transactionContent: string | null;
    referenceNumber: string | null;
}>;
export declare const WebhookPaymentBodySchema: z.ZodObject<{
    id: z.ZodNumber;
    gateway: z.ZodString;
    transactionDate: z.ZodString;
    accountNumber: z.ZodNullable<z.ZodString>;
    code: z.ZodNullable<z.ZodString>;
    content: z.ZodNullable<z.ZodString>;
    transferType: z.ZodEnum<["in", "out"]>;
    transferAmount: z.ZodNumber;
    accumulated: z.ZodNumber;
    subAccount: z.ZodNullable<z.ZodString>;
    referenceCode: z.ZodNullable<z.ZodString>;
    description: z.ZodString;
}, "strip", z.ZodTypeAny, {
    code: string | null;
    id: number;
    description: string;
    gateway: string;
    transactionDate: string;
    accountNumber: string | null;
    subAccount: string | null;
    accumulated: number;
    content: string | null;
    transferType: "in" | "out";
    transferAmount: number;
    referenceCode: string | null;
}, {
    code: string | null;
    id: number;
    description: string;
    gateway: string;
    transactionDate: string;
    accountNumber: string | null;
    subAccount: string | null;
    accumulated: number;
    content: string | null;
    transferType: "in" | "out";
    transferAmount: number;
    referenceCode: string | null;
}>;
export type PaymentTransactionType = z.infer<typeof PaymentTransactionSchema>;
export type WebhookPaymentBodyType = z.infer<typeof WebhookPaymentBodySchema>;
